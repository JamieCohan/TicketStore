2017-03-16 13:04:54 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-192]
2017-03-16 13:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENTS" not found; SQL statement:
select * from events [42102-192]
2017-03-16 13:44:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENTS" not found; SQL statement:
drop table events [42102-192]
2017-03-16 13:44:38 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENT" not found; SQL statement:
drop table event [42102-192]
2017-03-16 13:59:25 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Column "Ed Sheeran" not found; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price)
values(001, "Ed Sheeran", "Ed Sheeran plays the Three Arena", "18:00", "Dublin", 12/02/2017, "ED SHEERAN", 65.00) [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Insert.prepare(Insert.java:270)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-16 13:59:49 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Column "Ed Sheeran" not found; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, "Ed Sheeran", "Ed Sheeran plays the Three Arena", "18:00", "Dublin", 12/02/2017, "ED SHEERAN", 65.00) [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Insert.prepare(Insert.java:270)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-16 14:01:17 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "0"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 12/02/2017, 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 0, 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: 0
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
2017-03-16 14:03:06 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "12-0-2017"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', '12-0-2017', 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', '12-0-2017', 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: 12-0-2017
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:311)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
2017-03-16 14:03:15 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "-2005"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 12-0-2017, 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', -2005, 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: -2005
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
<<<<<<< HEAD
2017-03-21 21:03:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 21:07:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-21 21:07:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
=======
2017-03-21 11:54:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
ORDER_DATE                    VARCHAR(255),
TOTAL_COST                    DOUBLE,
USER_ID                       BIGINT,
>>>>>>> dff9eed82aae26005759f96140f8b9bb449d60b0
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
<<<<<<< HEAD
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 21:10:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-21 21:10:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
=======
order_date                    varchar(255),
total_cost                    double,
user_id                       bigint,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 11:56:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM *[*] "; expected "identifier"; SQL statement:
select * from * [42001-192]
>>>>>>> dff9eed82aae26005759f96140f8b9bb449d60b0
2017-03-23 18:52:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-23 18:52:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-23 20:13:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-23 20:13:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-30 10:09:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-30 10:09:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-30 11:34:18 jdbc[4]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:129)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:102)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:341)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:506)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:105)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:71)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:58)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:54)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:54)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:72)
	at play.api.db.DBApiProvider.get(DBModule.scala:62)
	at play.api.db.DBApiProvider.get(DBModule.scala:58)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:984)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.cglib.reflect.$FastMethod.invoke(FastMethod.java:53)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:57)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:91)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:174)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:108)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:96)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:181)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:123)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:168)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:164)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:164)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:131)
	at scala.Option.map(Option.scala:146)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:131)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:129)
	at scala.util.Success.flatMap(Try.scala:231)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:129)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:121)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 78 more
2017-03-30 11:42:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "EMAIL" not found; SQL statement:
insert into user (email, role, name, password) values ('matthew@tc.ie', 'admin', 'Matthew', 'matthew') [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:878)
	at org.h2.command.Parser.parseColumnList(Parser.java:862)
	at org.h2.command.Parser.parseInsert(Parser.java:1062)
	at org.h2.command.Parser.parsePrepared(Parser.java:413)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:43:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ","; SQL statement:
create table user (email, role, name, password) values ('matthew@tc.ie', 'admin', 'Matthew', 'matthew') [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:44:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "EMAIL"; SQL statement:
create table user (varchar2 email, varchar2 role, varchar2 name, varchar2 password) [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:45:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ","; SQL statement:
create table user  (email, role, name, password) [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:45:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: ")"; SQL statement:
create table user  (email) [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:48:13 jdbc[26]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
create table user(email varchar(255) primary key, role varchar(255), name varchar(255), password (varchar255)) [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:48:33 jdbc[26]: exception
org.h2.jdbc.JdbcSQLException: Unknown data type: "("; SQL statement:
create table user(email varchar(255), role varchar(255), name varchar(255), password (varchar255)) [50004-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:4079)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:3937)
	at org.h2.command.Parser.parseCreateTable(Parser.java:5972)
	at org.h2.command.Parser.parseCreate(Parser.java:4237)
	at org.h2.command.Parser.parsePrepared(Parser.java:362)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:50:45 jdbc[26]: exception
org.h2.jdbc.JdbcSQLException: Duplicate column name "EMAIL"; SQL statement:
create table user(email varchar(255) primary key, role varchar(255), name varchar(255), email varchar(255)) [42121-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.setColumns(Table.java:431)
	at org.h2.table.TableBase.<init>(TableBase.java:45)
	at org.h2.mvstore.db.MVTable.<init>(MVTable.java:103)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:108)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:41)
	at org.h2.schema.Schema.createTable(Schema.java:589)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:137)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-30 11:54:27 jdbc[39]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-30 11:54:29 jdbc[39]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-31 12:39:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-31 12:39:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-31 18:04:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-31 18:06:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-31 18:06:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-31 18:06:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 18:10:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 18:10:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 18:10:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 18:10:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 18:27:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-03-31 19:11:07 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:34:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:35:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:36:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:41:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:44:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.price c4 from ticket t0 [42102-192]
2017-04-03 11:46:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-04-03 11:46:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-04-03 11:46:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:48:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:48:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:51:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:53:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:55:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.ticket_type c1, t0.quantity c2, t0.price c3 from ticket t0 [42102-192]
2017-04-03 11:59:10 jdbc[3]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:129)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:102)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:341)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:506)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:105)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:71)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:58)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:54)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:54)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:72)
	at play.api.db.DBApiProvider.get(DBModule.scala:62)
	at play.api.db.DBApiProvider.get(DBModule.scala:58)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:984)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.cglib.reflect.$FastMethod.invoke(FastMethod.java:53)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:57)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:91)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:174)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:108)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:96)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:181)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:123)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:168)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:164)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:164)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:131)
	at scala.Option.map(Option.scala:146)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:131)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:129)
	at scala.util.Success.flatMap(Try.scala:231)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:129)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:121)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 79 more
2017-04-03 11:59:10 jdbc[3]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:129)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:102)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:341)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:506)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:105)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:71)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:58)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:54)
	at scala.util.Try$.apply(Try.scala:192)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:54)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:123)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:121)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:142)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:138)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:72)
	at play.api.db.DBApiProvider.get(DBModule.scala:62)
	at play.api.db.DBApiProvider.get(DBModule.scala:58)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:984)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.cglib.reflect.$FastMethod.invoke(FastMethod.java:53)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:57)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:91)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:174)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:108)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:96)
	at com.google.inject.Guice.createInjector(Guice.java:84)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:181)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:123)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:168)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:164)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:164)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:131)
	at scala.Option.map(Option.scala:146)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:131)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:129)
	at scala.util.Success.flatMap(Try.scala:231)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:129)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:121)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 79 more
2017-04-03 11:59:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-04-03 12:00:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-04-03 12:07:58 jdbc[16]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-04-03 12:08:13 jdbc[16]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-04-03 12:18:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-04-03 12:18:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USER" already exists; SQL statement:
create table user (
email                         varchar(255) not null,
role                          varchar(255),
name                          varchar(255),
password                      varchar(255),
constraint pk_user primary key (email)
) [42101-192]
2017-04-04 11:05:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO USER (EMAIL, ROLE, NAME, PASSWORD) VALUES (MATTHEW@[*]TC.IE, ADMIN, MATTHEW, MATTHEW) "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into user (email, role, name, password) values (matthew@tc.ie, admin, Matthew, matthew) [42001-192]
2017-04-04 11:05:35 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO USER (EMAIL, ROLE, NAME, PASSWORD) VALUES (MATTHEW@[*]TC.IE, ADMIN, MATTHEW, MATTHEW) "; expected "., (, [, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
insert into user (email, role, name, password) values (matthew@tc.ie, admin, Matthew, matthew) [42001-192]
2017-04-06 11:16:38 jdbc[16]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.event_id c0, t0.event_name c1, t0.time c2, t0.location c3, t0.date c4, t0.title c5 from event t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:310)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:328)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:295)
	at com.avaje.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:292)
	at com.avaje.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:94)
	at com.avaje.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:347)
	at com.avaje.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1388)
	at com.avaje.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1086)
	at models.Event.findAllT(Event.java:112)
	at models.Event.options(Event.java:118)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket$$anonfun$apply$1.apply(addTicket.template.scala:46)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket$$anonfun$apply$1.apply(addTicket.template.scala:43)
	at views.html.helper.form_Scope0$form.apply(form.template.scala:35)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket.apply(addTicket.template.scala:43)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket.render(addTicket.template.scala:69)
	at views.html.addTicket.render(addTicket.template.scala)
	at controllers.HomeController.addTicket(HomeController.java:124)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$13$$anonfun$apply$13.apply(Routes.scala:477)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$13$$anonfun$apply$13.apply(Routes.scala:477)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:157)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:156)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$14$$anon$3$$anon$1.invocation(HandlerInvoker.scala:136)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:73)
	at play.http.HttpRequestHandler$1.call(HttpRequestHandler.java:54)
	at play.db.ebean.TransactionalAction.lambda$call$6(TransactionalAction.java:18)
	at com.avaje.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:628)
	at com.avaje.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:622)
	at com.avaje.ebean.Ebean.execute(Ebean.java:1419)
	at play.db.ebean.TransactionalAction.call(TransactionalAction.java:18)
	at controllers.AuthAdmin.call(AuthAdmin.java:20)
	at play.mvc.Security$AuthenticatedAction.call(Security.java:53)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:492)
	at play.core.j.JavaAction.apply(JavaAction.scala:108)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:111)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:110)
	at scala.Option.map(Option.scala:146)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:110)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:103)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:249)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2017-04-06 11:17:10 jdbc[16]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.event_id c0, t0.event_name c1, t0.time c2, t0.location c3, t0.date c4, t0.title c5 from event t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:310)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:328)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:295)
	at com.avaje.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:292)
	at com.avaje.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:94)
	at com.avaje.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:347)
	at com.avaje.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1388)
	at com.avaje.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1086)
	at models.Event.findAllT(Event.java:112)
	at models.Event.options(Event.java:118)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket$$anonfun$apply$1.apply(addTicket.template.scala:46)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket$$anonfun$apply$1.apply(addTicket.template.scala:43)
	at views.html.helper.form_Scope0$form.apply(form.template.scala:35)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket.apply(addTicket.template.scala:43)
	at views.html.addTicket_Scope0$addTicket_Scope1$addTicket.render(addTicket.template.scala:69)
	at views.html.addTicket.render(addTicket.template.scala)
	at controllers.HomeController.addTicket(HomeController.java:124)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$13$$anonfun$apply$13.apply(Routes.scala:477)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$13$$anonfun$apply$13.apply(Routes.scala:477)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:157)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:156)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$14$$anon$3$$anon$1.invocation(HandlerInvoker.scala:136)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:73)
	at play.http.HttpRequestHandler$1.call(HttpRequestHandler.java:54)
	at play.db.ebean.TransactionalAction.lambda$call$6(TransactionalAction.java:18)
	at com.avaje.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:628)
	at com.avaje.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:622)
	at com.avaje.ebean.Ebean.execute(Ebean.java:1419)
	at play.db.ebean.TransactionalAction.call(TransactionalAction.java:18)
	at controllers.AuthAdmin.call(AuthAdmin.java:20)
	at play.mvc.Security$AuthenticatedAction.call(Security.java:53)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:492)
	at play.core.j.JavaAction.apply(JavaAction.scala:108)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:111)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:110)
	at scala.Option.map(Option.scala:146)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:110)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:103)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:249)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2017-04-06 11:28:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO TICKET VALUES(2,'standing',33,10,1[*]"; expected "[, ::, *, /, %, +, -, ||, ~, !~, NOT, LIKE, REGEXP, IS, IN, BETWEEN, AND, OR, ,, )"; SQL statement:
INSERT INTO TICKET VALUES(2,'standing',33,10,1 [42001-192]
2017-04-06 13:06:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "ID" not found; SQL statement:
insert into category (id,name) values (1,'Music') [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:878)
	at org.h2.command.Parser.parseColumnList(Parser.java:862)
	at org.h2.command.Parser.parseInsert(Parser.java:1062)
	at org.h2.command.Parser.parsePrepared(Parser.java:413)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:309)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$5.apply(EvolutionsApi.scala:201)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$5.apply(EvolutionsApi.scala:201)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:201)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:196)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:196)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:86)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:361)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:40)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1$$anonfun$apply$7.apply(DevServerStart.scala:203)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1$$anonfun$apply$7.apply(DevServerStart.scala:203)
	at scala.Option.flatMap(Option.scala:171)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1.apply(DevServerStart.scala:203)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1.apply(DevServerStart.scala:203)
	at scala.Option.orElse(Option.scala:289)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1.handleWebCommand(DevServerStart.scala:202)
	at play.core.server.Server$class.getHandlerFor(Server.scala:49)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:47)
	at play.core.server.netty.PlayRequestHandler.handle(PlayRequestHandler.scala:82)
	at play.core.server.netty.PlayRequestHandler.channelRead(PlayRequestHandler.scala:163)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at com.typesafe.netty.http.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:129)
	at com.typesafe.netty.http.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at java.lang.Thread.run(Thread.java:745)
2017-04-06 13:09:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "CATID" not found; SQL statement:
insert into category (catID,name) values (1,'Music') [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:878)
	at org.h2.command.Parser.parseColumnList(Parser.java:862)
	at org.h2.command.Parser.parseInsert(Parser.java:1062)
	at org.h2.command.Parser.parsePrepared(Parser.java:413)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.play$api$db$evolutions$DatabaseEvolutions$$execute(EvolutionsApi.scala:309)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$5.apply(EvolutionsApi.scala:201)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1$$anonfun$apply$5.apply(EvolutionsApi.scala:201)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:201)
	at play.api.db.evolutions.DatabaseEvolutions$$anonfun$evolve$1.apply(EvolutionsApi.scala:196)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:196)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:86)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:361)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:40)
	at play.core.DefaultWebCommands$$anonfun$handleWebCommand$1.apply(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:489)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1$$anonfun$apply$7.apply(DevServerStart.scala:203)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1$$anonfun$apply$7.apply(DevServerStart.scala:203)
	at scala.Option.flatMap(Option.scala:171)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1.apply(DevServerStart.scala:203)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$handleWebCommand$1.apply(DevServerStart.scala:203)
	at scala.Option.orElse(Option.scala:289)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1.handleWebCommand(DevServerStart.scala:202)
	at play.core.server.Server$class.getHandlerFor(Server.scala:49)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:47)
	at play.core.server.netty.PlayRequestHandler.handle(PlayRequestHandler.scala:82)
	at play.core.server.netty.PlayRequestHandler.channelRead(PlayRequestHandler.scala:163)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at com.typesafe.netty.http.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:129)
	at com.typesafe.netty.http.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:96)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at java.lang.Thread.run(Thread.java:745)
